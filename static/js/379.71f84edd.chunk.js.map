{"version":3,"file":"static/js/379.71f84edd.chunk.js","mappings":"iLAIA,MAAMA,EAAU,CACd,SAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KACtC,SAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KACpC,SAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KACpC,OAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAmDtC,EAhD+BC,IAAqD,IAADC,EAAA,IAAnD,OAAEC,EAAM,UAAEC,EAAS,UAAEC,EAAS,aAAEC,GAAcL,EAC5E,MAIMM,GAEL,QAFqBL,EAAAM,OAAOC,QAAQT,GAASU,MAAKC,IAAA,IAAE,CAAEC,GAAMD,EAAA,OAC3DC,EAAMC,KAAK,OAASV,EAAOU,KAAK,IAAI,WACrC,IAAAX,OAAA,EAFqBA,EAElB,KAAM,WAEV,OACEY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,SAASH,UAAU,0CAAyCC,SAAC,aAC5EC,EAAAA,EAAAA,KAAA,UACEE,GAAG,SACHC,MAAOb,EACPc,SAfoBC,IAC1BlB,EAAUJ,EAAQsB,EAAEC,OAAOH,OAAO,EAe5BL,UAAU,4BAA2BC,SAEpCR,OAAOgB,KAAKxB,GAASyB,KAAKC,IACzBT,EAAAA,EAAAA,KAAA,UAAkBG,MAAOM,EAAIV,SAAEU,GAAlBA,WAInBZ,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,YAAYH,UAAU,0CAAyCC,SAAA,CAAC,eAAaX,MAC5FY,EAAAA,EAAAA,KAAA,SACEU,KAAK,QACLR,GAAG,YACHS,IAAK,GACLC,IAAK,GACLC,KAAM,EACNV,MAAOf,EACPgB,SAAWC,GAAMhB,EAAayB,OAAOT,EAAEC,OAAOH,QAC9CL,UAAU,gBAGV,C","sources":["components/FretboardCustomization.jsx"],"sourcesContent":["// File: src/components/FretboardCustomization.jsx\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TUNINGS = {\r\n  'Standard': ['E', 'B', 'G', 'D', 'A', 'E'],\r\n  'Drop D': ['E', 'B', 'G', 'D', 'A', 'D'],\r\n  'Open G': ['D', 'B', 'G', 'D', 'G', 'D'],\r\n  'DADGAD': ['D', 'A', 'G', 'D', 'A', 'D'],\r\n};\r\n\r\nconst FretboardCustomization = ({ tuning, setTuning, fretCount, setFretCount }) => {\r\n  const handleTuningChange = (e) => {\r\n    setTuning(TUNINGS[e.target.value]);\r\n  };\r\n\r\n  const currentTuning = Object.entries(TUNINGS).find(([, notes]) => \r\n    notes.join(',') === tuning.join(',')\r\n  )?.[0] || 'Standard';\r\n\r\n  return (\r\n    <div className=\"mb-4 space-y-4\">\r\n      <div>\r\n        <label htmlFor=\"tuning\" className=\"block text-sm font-medium text-gray-700\">Tuning:</label>\r\n        <select\r\n          id=\"tuning\"\r\n          value={currentTuning}\r\n          onChange={handleTuningChange}\r\n          className=\"w-full p-2 border rounded\"\r\n        >\r\n          {Object.keys(TUNINGS).map((key) => (\r\n            <option key={key} value={key}>{key}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"fretCount\" className=\"block text-sm font-medium text-gray-700\">Fret Count: {fretCount}</label>\r\n        <input\r\n          type=\"range\"\r\n          id=\"fretCount\"\r\n          min={12}\r\n          max={24}\r\n          step={1}\r\n          value={fretCount}\r\n          onChange={(e) => setFretCount(Number(e.target.value))}\r\n          className=\"w-full\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFretboardCustomization.propTypes = {\r\n  tuning: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  setTuning: PropTypes.func.isRequired,\r\n  fretCount: PropTypes.number.isRequired,\r\n  setFretCount: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FretboardCustomization;"],"names":["TUNINGS","_ref","_Object$entries$find","tuning","setTuning","fretCount","setFretCount","currentTuning","Object","entries","find","_ref2","notes","join","_jsxs","className","children","_jsx","htmlFor","id","value","onChange","e","target","keys","map","key","type","min","max","step","Number"],"sourceRoot":""}