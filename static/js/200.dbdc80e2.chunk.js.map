{"version":3,"file":"static/js/200.dbdc80e2.chunk.js","mappings":"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","sources":["../node_modules/adsr/index.js","../node_modules/audio-loader/lib/base64.js","../node_modules/audio-loader/lib/fetch.js","../node_modules/audio-loader/lib/index.js","../node_modules/midimessage/dist/index.min.js","../node_modules/note-parser/index.js","../node_modules/sample-player/lib/events.js","../node_modules/sample-player/lib/index.js","../node_modules/sample-player/lib/midi.js","../node_modules/sample-player/lib/notes.js","../node_modules/sample-player/lib/player.js","../node_modules/sample-player/lib/scheduler.js","../node_modules/sample-player/node_modules/note-parser/index.js","../node_modules/soundfont-player/lib/index.js","../node_modules/soundfont-player/lib/legacy.js"],"sourcesContent":["module.exports = ADSR\n\nfunction ADSR(audioContext){\n  var node = audioContext.createGain()\n\n  var voltage = node._voltage = getVoltage(audioContext)\n  var value = scale(voltage)\n  var startValue = scale(voltage)\n  var endValue = scale(voltage)\n\n  node._startAmount = scale(startValue)\n  node._endAmount = scale(endValue)\n\n  node._multiplier = scale(value)\n  node._multiplier.connect(node)\n  node._startAmount.connect(node)\n  node._endAmount.connect(node)\n\n  node.value = value.gain\n  node.startValue = startValue.gain\n  node.endValue = endValue.gain\n\n  node.startValue.value = 0\n  node.endValue.value = 0\n\n  Object.defineProperties(node, props)\n  return node\n}\n\nvar props = {\n\n  attack: { value: 0, writable: true },\n  decay: { value: 0, writable: true },\n  sustain: { value: 1, writable: true },\n  release: {value: 0, writable: true },\n\n  getReleaseDuration: {\n    value: function(){\n      return this.release\n    }\n  },\n\n  start: {\n    value: function(at){\n      var target = this._multiplier.gain\n      var startAmount = this._startAmount.gain\n      var endAmount = this._endAmount.gain\n\n      this._voltage.start(at)\n      this._decayFrom = this._decayFrom = at+this.attack\n      this._startedAt = at\n\n      var sustain = this.sustain\n\n      target.cancelScheduledValues(at)\n      startAmount.cancelScheduledValues(at)\n      endAmount.cancelScheduledValues(at)\n\n      endAmount.setValueAtTime(0, at)\n\n      if (this.attack){\n        target.setValueAtTime(0, at)\n        target.linearRampToValueAtTime(1, at + this.attack)\n\n        startAmount.setValueAtTime(1, at)\n        startAmount.linearRampToValueAtTime(0, at + this.attack)\n      } else {\n        target.setValueAtTime(1, at)\n        startAmount.setValueAtTime(0, at)\n      }\n\n      if (this.decay){\n        target.setTargetAtTime(sustain, this._decayFrom, getTimeConstant(this.decay))\n      }\n    }\n  },\n\n  stop: {\n    value: function(at, isTarget){\n      if (isTarget){\n        at = at - this.release\n      }\n\n      var endTime = at + this.release\n      if (this.release){\n\n        var target = this._multiplier.gain\n        var startAmount = this._startAmount.gain\n        var endAmount = this._endAmount.gain\n\n        target.cancelScheduledValues(at)\n        startAmount.cancelScheduledValues(at)\n        endAmount.cancelScheduledValues(at)\n\n        var expFalloff = getTimeConstant(this.release)\n\n        // truncate attack (required as linearRamp is removed by cancelScheduledValues)\n        if (this.attack && at < this._decayFrom){\n          var valueAtTime = getValue(0, 1, this._startedAt, this._decayFrom, at)\n          target.linearRampToValueAtTime(valueAtTime, at)\n          startAmount.linearRampToValueAtTime(1-valueAtTime, at)\n          startAmount.setTargetAtTime(0, at, expFalloff)\n        }\n\n        endAmount.setTargetAtTime(1, at, expFalloff)\n        target.setTargetAtTime(0, at, expFalloff)\n      }\n\n      this._voltage.stop(endTime)\n      return endTime\n    }\n  },\n\n  onended: {\n    get: function(){\n      return this._voltage.onended\n    },\n    set: function(value){\n      this._voltage.onended = value\n    }\n  }\n\n}\n\nvar flat = new Float32Array([1,1])\nfunction getVoltage(context){\n  var voltage = context.createBufferSource()\n  var buffer = context.createBuffer(1, 2, context.sampleRate)\n  buffer.getChannelData(0).set(flat)\n  voltage.buffer = buffer\n  voltage.loop = true\n  return voltage\n}\n\nfunction scale(node){\n  var gain = node.context.createGain()\n  node.connect(gain)\n  return gain\n}\n\nfunction getTimeConstant(time){\n  return Math.log(time+1)/Math.log(100)\n}\n\nfunction getValue(start, end, fromTime, toTime, at){\n  var difference = end - start\n  var time = toTime - fromTime\n  var truncateTime = at - fromTime\n  var phase = truncateTime / time\n  var value = start + phase * difference\n\n  if (value <= start) {\n      value = start\n  }\n  if (value >= end) {\n      value = end\n  }\n\n  return value\n}\n","'use strict'\n\n// DECODE UTILITIES\nfunction b64ToUint6 (nChr) {\n  return nChr > 64 && nChr < 91 ? nChr - 65\n    : nChr > 96 && nChr < 123 ? nChr - 71\n    : nChr > 47 && nChr < 58 ? nChr + 4\n    : nChr === 43 ? 62\n    : nChr === 47 ? 63\n    : 0\n}\n\n// Decode Base64 to Uint8Array\n// ---------------------------\nfunction decode (sBase64, nBlocksSize) {\n  var sB64Enc = sBase64.replace(/[^A-Za-z0-9\\+\\/]/g, '')\n  var nInLen = sB64Enc.length\n  var nOutLen = nBlocksSize\n    ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize\n    : nInLen * 3 + 1 >> 2\n  var taBytes = new Uint8Array(nOutLen)\n\n  for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n    nMod4 = nInIdx & 3\n    nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4\n    if (nMod4 === 3 || nInLen - nInIdx === 1) {\n      for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n        taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255\n      }\n      nUint24 = 0\n    }\n  }\n  return taBytes\n}\n\nmodule.exports = { decode: decode }\n","/* global XMLHttpRequest */\n'use strict'\n\n/**\n * Given a url and a return type, returns a promise to the content of the url\n * Basically it wraps a XMLHttpRequest into a Promise\n *\n * @param {String} url\n * @param {String} type - can be 'text' or 'arraybuffer'\n * @return {Promise}\n */\nmodule.exports = function (url, type) {\n  return new Promise(function (done, reject) {\n    var req = new XMLHttpRequest()\n    if (type) req.responseType = type\n\n    req.open('GET', url)\n    req.onload = function () {\n      req.status === 200 ? done(req.response) : reject(Error(req.statusText))\n    }\n    req.onerror = function () { reject(Error('Network Error')) }\n    req.send()\n  })\n}\n","'use strict'\n\nvar base64 = require('./base64')\nvar fetch = require('./fetch')\n\n// Given a regex, return a function that test if against a string\nfunction fromRegex (r) {\n  return function (o) { return typeof o === 'string' && r.test(o) }\n}\n// Try to apply a prefix to a name\nfunction prefix (pre, name) {\n  return typeof pre === 'string' ? pre + name\n    : typeof pre === 'function' ? pre(name)\n    : name\n}\n\n/**\n * Load one or more audio files\n *\n *\n * Possible option keys:\n *\n * - __from__ {Function|String}: a function or string to convert from file names to urls.\n * If is a string it will be prefixed to the name:\n * `load(ac, 'snare.mp3', { from: 'http://audio.net/samples/' })`\n * If it's a function it receives the file name and should return the url as string.\n * - __only__ {Array} - when loading objects, if provided, only the given keys\n * will be included in the decoded object:\n * `load(ac, 'piano.json', { only: ['C2', 'D2'] })`\n *\n * @param {AudioContext} ac - the audio context\n * @param {Object} source - the object to be loaded\n * @param {Object} options - (Optional) the load options for that object\n * @param {Object} defaultValue - (Optional) the default value to return as\n * in a promise if not valid loader found\n */\nfunction load (ac, source, options, defVal) {\n  var loader =\n    // Basic audio loading\n      isArrayBuffer(source) ? loadArrayBuffer\n    : isAudioFileName(source) ? loadAudioFile\n    : isPromise(source) ? loadPromise\n    // Compound objects\n    : isArray(source) ? loadArrayData\n    : isObject(source) ? loadObjectData\n    : isJsonFileName(source) ? loadJsonFile\n    // Base64 encoded audio\n    : isBase64Audio(source) ? loadBase64Audio\n    : isJsFileName(source) ? loadMidiJSFile\n    : null\n\n  var opts = options || {}\n  return loader ? loader(ac, source, opts)\n    : defVal ? Promise.resolve(defVal)\n    : Promise.reject('Source not valid (' + source + ')')\n}\nload.fetch = fetch\n\n// BASIC AUDIO LOADING\n// ===================\n\n// Load (decode) an array buffer\nfunction isArrayBuffer (o) { return o instanceof ArrayBuffer }\nfunction loadArrayBuffer (ac, array, options) {\n  return new Promise(function (done, reject) {\n    ac.decodeAudioData(array,\n      function (buffer) { done(buffer) },\n      function () { reject(\"Can't decode audio data (\" + array.slice(0, 30) + '...)') }\n    )\n  })\n}\n\n// Load an audio filename\nvar isAudioFileName = fromRegex(/\\.(mp3|wav|ogg)(\\?.*)?$/i)\nfunction loadAudioFile (ac, name, options) {\n  var url = prefix(options.from, name)\n  return load(ac, load.fetch(url, 'arraybuffer'), options)\n}\n\n// Load the result of a promise\nfunction isPromise (o) { return o && typeof o.then === 'function' }\nfunction loadPromise (ac, promise, options) {\n  return promise.then(function (value) {\n    return load(ac, value, options)\n  })\n}\n\n// COMPOUND OBJECTS\n// ================\n\n// Try to load all the items of an array\nvar isArray = Array.isArray\nfunction loadArrayData (ac, array, options) {\n  return Promise.all(array.map(function (data) {\n    return load(ac, data, options, data)\n  }))\n}\n\n// Try to load all the values of a key/value object\nfunction isObject (o) { return o && typeof o === 'object' }\nfunction loadObjectData (ac, obj, options) {\n  var dest = {}\n  var promises = Object.keys(obj).map(function (key) {\n    if (options.only && options.only.indexOf(key) === -1) return null\n    var value = obj[key]\n    return load(ac, value, options, value).then(function (audio) {\n      dest[key] = audio\n    })\n  })\n  return Promise.all(promises).then(function () { return dest })\n}\n\n// Load the content of a JSON file\nvar isJsonFileName = fromRegex(/\\.json(\\?.*)?$/i)\nfunction loadJsonFile (ac, name, options) {\n  var url = prefix(options.from, name)\n  return load(ac, load.fetch(url, 'text').then(JSON.parse), options)\n}\n\n// BASE64 ENCODED FORMATS\n// ======================\n\n// Load strings with Base64 encoded audio\nvar isBase64Audio = fromRegex(/^data:audio/)\nfunction loadBase64Audio (ac, source, options) {\n  var i = source.indexOf(',')\n  return load(ac, base64.decode(source.slice(i + 1)).buffer, options)\n}\n\n// Load .js files with MidiJS soundfont prerendered audio\nvar isJsFileName = fromRegex(/\\.js(\\?.*)?$/i)\nfunction loadMidiJSFile (ac, name, options) {\n  var url = prefix(options.from, name)\n  return load(ac, load.fetch(url, 'text').then(midiJsToJson), options)\n}\n\n// convert a MIDI.js javascript soundfont file to json\nfunction midiJsToJson (data) {\n  var begin = data.indexOf('MIDI.Soundfont.')\n  if (begin < 0) throw Error('Invalid MIDI.js Soundfont format')\n  begin = data.indexOf('=', begin) + 2\n  var end = data.lastIndexOf(',')\n  return JSON.parse(data.slice(begin, end) + '}')\n}\n\nif (typeof module === 'object' && module.exports) module.exports = load\nif (typeof window !== 'undefined') window.loadAudio = load\n","(function(e){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=e()}else if(typeof define===\"function\"&&define.amd){define([],e)}else{var t;if(typeof window!==\"undefined\"){t=window}else if(typeof global!==\"undefined\"){t=global}else if(typeof self!==\"undefined\"){t=self}else{t=this}t.midimessage=e()}})(function(){var e,t,s;return function o(e,t,s){function a(n,i){if(!t[n]){if(!e[n]){var l=typeof require==\"function\"&&require;if(!i&&l)return l(n,!0);if(r)return r(n,!0);var h=new Error(\"Cannot find module '\"+n+\"'\");throw h.code=\"MODULE_NOT_FOUND\",h}var c=t[n]={exports:{}};e[n][0].call(c.exports,function(t){var s=e[n][1][t];return a(s?s:t)},c,c.exports,o,e,t,s)}return t[n].exports}var r=typeof require==\"function\"&&require;for(var n=0;n<s.length;n++)a(s[n]);return a}({1:[function(e,t,s){\"use strict\";Object.defineProperty(s,\"__esModule\",{value:true});s[\"default\"]=function(e){function t(e){this._event=e;this._data=e.data;this.receivedTime=e.receivedTime;if(this._data&&this._data.length<2){console.warn(\"Illegal MIDI message of length\",this._data.length);return}this._messageCode=e.data[0]&240;this.channel=e.data[0]&15;switch(this._messageCode){case 128:this.messageType=\"noteoff\";this.key=e.data[1]&127;this.velocity=e.data[2]&127;break;case 144:this.messageType=\"noteon\";this.key=e.data[1]&127;this.velocity=e.data[2]&127;break;case 160:this.messageType=\"keypressure\";this.key=e.data[1]&127;this.pressure=e.data[2]&127;break;case 176:this.messageType=\"controlchange\";this.controllerNumber=e.data[1]&127;this.controllerValue=e.data[2]&127;if(this.controllerNumber===120&&this.controllerValue===0){this.channelModeMessage=\"allsoundoff\"}else if(this.controllerNumber===121){this.channelModeMessage=\"resetallcontrollers\"}else if(this.controllerNumber===122){if(this.controllerValue===0){this.channelModeMessage=\"localcontroloff\"}else{this.channelModeMessage=\"localcontrolon\"}}else if(this.controllerNumber===123&&this.controllerValue===0){this.channelModeMessage=\"allnotesoff\"}else if(this.controllerNumber===124&&this.controllerValue===0){this.channelModeMessage=\"omnimodeoff\"}else if(this.controllerNumber===125&&this.controllerValue===0){this.channelModeMessage=\"omnimodeon\"}else if(this.controllerNumber===126){this.channelModeMessage=\"monomodeon\"}else if(this.controllerNumber===127){this.channelModeMessage=\"polymodeon\"}break;case 192:this.messageType=\"programchange\";this.program=e.data[1];break;case 208:this.messageType=\"channelpressure\";this.pressure=e.data[1]&127;break;case 224:this.messageType=\"pitchbendchange\";var t=e.data[2]&127;var s=e.data[1]&127;this.pitchBend=(t<<8)+s;break}}return new t(e)};t.exports=s[\"default\"]},{}]},{},[1])(1)});\n//# sourceMappingURL=dist/index.js.map","'use strict'\n\n// util\nfunction fillStr (s, num) { return Array(num + 1).join(s) }\nfunction isNum (x) { return typeof x === 'number' }\nfunction isStr (x) { return typeof x === 'string' }\nfunction isDef (x) { return typeof x !== 'undefined' }\nfunction midiToFreq (midi, tuning) {\n  return Math.pow(2, (midi - 69) / 12) * (tuning || 440)\n}\n\nvar REGEX = /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)\\s*$/\n/**\n * A regex for matching note strings in scientific notation.\n *\n * @name regex\n * @function\n * @return {RegExp} the regexp used to parse the note name\n *\n * The note string should have the form `letter[accidentals][octave][element]`\n * where:\n *\n * - letter: (Required) is a letter from A to G either upper or lower case\n * - accidentals: (Optional) can be one or more `b` (flats), `#` (sharps) or `x` (double sharps).\n * They can NOT be mixed.\n * - octave: (Optional) a positive or negative integer\n * - element: (Optional) additionally anything after the duration is considered to\n * be the element name (for example: 'C2 dorian')\n *\n * The executed regex contains (by array index):\n *\n * - 0: the complete string\n * - 1: the note letter\n * - 2: the optional accidentals\n * - 3: the optional octave\n * - 4: the rest of the string (trimmed)\n *\n * @example\n * var parser = require('note-parser')\n * parser.regex.exec('c#4')\n * // => ['c#4', 'c', '#', '4', '']\n * parser.regex.exec('c#4 major')\n * // => ['c#4major', 'c', '#', '4', 'major']\n * parser.regex().exec('CMaj7')\n * // => ['CMaj7', 'C', '', '', 'Maj7']\n */\nexport function regex () { return REGEX }\n\nvar SEMITONES = [0, 2, 4, 5, 7, 9, 11]\n/**\n * Parse a note name in scientific notation an return it's components,\n * and some numeric properties including midi number and frequency.\n *\n * @name parse\n * @function\n * @param {String} note - the note string to be parsed\n * @param {Boolean} isTonic - true the strings it's supposed to contain a note number\n * and some category (for example an scale: 'C# major'). It's false by default,\n * but when true, en extra tonicOf property is returned with the category ('major')\n * @param {Float} tunning - The frequency of A4 note to calculate frequencies.\n * By default it 440.\n * @return {Object} the parsed note name or null if not a valid note\n *\n * The parsed note name object will ALWAYS contains:\n * - letter: the uppercase letter of the note\n * - acc: the accidentals of the note (only sharps or flats)\n * - pc: the pitch class (letter + acc)\n * - step: s a numeric representation of the letter. It's an integer from 0 to 6\n * where 0 = C, 1 = D ... 6 = B\n * - alt: a numeric representation of the accidentals. 0 means no alteration,\n * positive numbers are for sharps and negative for flats\n * - chroma: a numeric representation of the pitch class. It's like midi for\n * pitch classes. 0 = C, 1 = C#, 2 = D ... 11 = B. Can be used to find enharmonics\n * since, for example, chroma of 'Cb' and 'B' are both 11\n *\n * If the note has octave, the parser object will contain:\n * - oct: the octave number (as integer)\n * - midi: the midi number\n * - freq: the frequency (using tuning parameter as base)\n *\n * If the parameter `isTonic` is set to true, the parsed object will contain:\n * - tonicOf: the rest of the string that follows note name (left and right trimmed)\n *\n * @example\n * var parse = require('note-parser').parse\n * parse('Cb4')\n * // => { letter: 'C', acc: 'b', pc: 'Cb', step: 0, alt: -1, chroma: -1,\n *         oct: 4, midi: 59, freq: 246.94165062806206 }\n * // if no octave, no midi, no freq\n * parse('fx')\n * // => { letter: 'F', acc: '##', pc: 'F##', step: 3, alt: 2, chroma: 7 })\n */\nexport function parse (str, isTonic, tuning) {\n  if (typeof str !== 'string') return null\n  var m = REGEX.exec(str)\n  if (!m || (!isTonic && m[4])) return null\n\n  var p = { letter: m[1].toUpperCase(), acc: m[2].replace(/x/g, '##') }\n  p.pc = p.letter + p.acc\n  p.step = (p.letter.charCodeAt(0) + 3) % 7\n  p.alt = p.acc[0] === 'b' ? -p.acc.length : p.acc.length\n  var pos = SEMITONES[p.step] + p.alt\n  p.chroma = pos < 0 ? 12 + pos : pos % 12\n  if (m[3]) { // has octave\n    p.oct = +m[3]\n    p.midi = pos + 12 * (p.oct + 1)\n    p.freq = midiToFreq(p.midi, tuning)\n  }\n  if (isTonic) p.tonicOf = m[4]\n  return p\n}\n\nvar LETTERS = 'CDEFGAB'\nfunction accStr (n) { return !isNum(n) ? '' : n < 0 ? fillStr('b', -n) : fillStr('#', n) }\nfunction octStr (n) { return !isNum(n) ? '' : '' + n }\n\n/**\n * Create a string from a parsed object or `step, alteration, octave` parameters\n * @param {Object} obj - the parsed data object\n * @return {String} a note string or null if not valid parameters\n * @since 1.2\n * @example\n * parser.build(parser.parse('cb2')) // => 'Cb2'\n *\n * @example\n * // it accepts (step, alteration, octave) parameters:\n * parser.build(3) // => 'F'\n * parser.build(3, -1) // => 'Fb'\n * parser.build(3, -1, 4) // => 'Fb4'\n */\nexport function build (s, a, o) {\n  if (s === null || typeof s === 'undefined') return null\n  if (s.step) return build(s.step, s.alt, s.oct)\n  if (s < 0 || s > 6) return null\n  return LETTERS.charAt(s) + accStr(a) + octStr(o)\n}\n\n/**\n * Get midi of a note\n *\n * @name midi\n * @function\n * @param {String|Integer} note - the note name or midi number\n * @return {Integer} the midi number of the note or null if not a valid note\n * or the note does NOT contains octave\n * @example\n * var parser = require('note-parser')\n * parser.midi('A4') // => 69\n * parser.midi('A') // => null\n * @example\n * // midi numbers are bypassed (even as strings)\n * parser.midi(60) // => 60\n * parser.midi('60') // => 60\n */\nexport function midi (note) {\n  if ((isNum(note) || isStr(note)) && note >= 0 && note < 128) return +note\n  var p = parse(note)\n  return p && isDef(p.midi) ? p.midi : null\n}\n\n/**\n * Get freq of a note in hertzs (in a well tempered 440Hz A4)\n *\n * @name freq\n * @function\n * @param {String} note - the note name or note midi number\n * @param {String} tuning - (Optional) the A4 frequency (440 by default)\n * @return {Float} the freq of the number if hertzs or null if not valid note\n * @example\n * var parser = require('note-parser')\n * parser.freq('A4') // => 440\n * parser.freq('A') // => null\n * @example\n * // can change tuning (440 by default)\n * parser.freq('A4', 444) // => 444\n * parser.freq('A3', 444) // => 222\n * @example\n * // it accepts midi numbers (as numbers and as strings)\n * parser.freq(69) // => 440\n * parser.freq('69', 442) // => 442\n */\nexport function freq (note, tuning) {\n  var m = midi(note)\n  return m === null ? null : midiToFreq(m, tuning)\n}\n\nexport function letter (src) { return (parse(src) || {}).letter }\nexport function acc (src) { return (parse(src) || {}).acc }\nexport function pc (src) { return (parse(src) || {}).pc }\nexport function step (src) { return (parse(src) || {}).step }\nexport function alt (src) { return (parse(src) || {}).alt }\nexport function chroma (src) { return (parse(src) || {}).chroma }\nexport function oct (src) { return (parse(src) || {}).oct }\n","\nmodule.exports = function (player) {\n  /**\n   * Adds a listener of an event\n   * @chainable\n   * @param {String} event - the event name\n   * @param {Function} callback - the event handler\n   * @return {SamplePlayer} the player\n   * @example\n   * player.on('start', function(time, note) {\n   *   console.log(time, note)\n   * })\n   */\n  player.on = function (event, cb) {\n    if (arguments.length === 1 && typeof event === 'function') return player.on('event', event)\n    var prop = 'on' + event\n    var old = player[prop]\n    player[prop] = old ? chain(old, cb) : cb\n    return player\n  }\n  return player\n}\n\nfunction chain (fn1, fn2) {\n  return function (a, b, c, d) { fn1(a, b, c, d); fn2(a, b, c, d) }\n}\n","'use strict'\n\nvar player = require('./player')\nvar events = require('./events')\nvar notes = require('./notes')\nvar scheduler = require('./scheduler')\nvar midi = require('./midi')\n\nfunction SamplePlayer (ac, source, options) {\n  return midi(scheduler(notes(events(player(ac, source, options)))))\n}\n\nif (typeof module === 'object' && module.exports) module.exports = SamplePlayer\nif (typeof window !== 'undefined') window.SamplePlayer = SamplePlayer\n","var midimessage = require('midimessage')\n\nmodule.exports = function (player) {\n  /**\n  * Connect a player to a midi input\n  *\n  * The options accepts:\n  *\n  * - channel: the channel to listen to. Listen to all channels by default.\n  *\n  * @param {MIDIInput} input\n  * @param {Object} options - (Optional)\n  * @return {SamplePlayer} the player\n  * @example\n  * var piano = player(...)\n  * window.navigator.requestMIDIAccess().then(function (midiAccess) {\n  *   midiAccess.inputs.forEach(function (midiInput) {\n  *     piano.listenToMidi(midiInput)\n  *   })\n  * })\n  */\n  player.listenToMidi = function (input, options) {\n    var started = {}\n    var opts = options || {}\n    var gain = opts.gain || function (vel) { return vel / 127 }\n\n    input.onmidimessage = function (msg) {\n      var mm = msg.messageType ? msg : midimessage(msg)\n      if (mm.messageType === 'noteon' && mm.velocity === 0) {\n        mm.messageType = 'noteoff'\n      }\n      if (opts.channel && mm.channel !== opts.channel) return\n\n      switch (mm.messageType) {\n        case 'noteon':\n          started[mm.key] = player.play(mm.key, 0, { gain: gain(mm.velocity) })\n          break\n        case 'noteoff':\n          if (started[mm.key]) {\n            started[mm.key].stop()\n            delete started[mm.key]\n          }\n          break\n      }\n    }\n    return player\n  }\n  return player\n}\n","'use strict'\n\nvar note = require('note-parser')\nvar isMidi = function (n) { return n !== null && n !== [] && n >= 0 && n < 129 }\nvar toMidi = function (n) { return isMidi(n) ? +n : note.midi(n) }\n\n// Adds note name to midi conversion\nmodule.exports = function (player) {\n  if (player.buffers) {\n    var map = player.opts.map\n    var toKey = typeof map === 'function' ? map : toMidi\n    var mapper = function (name) {\n      return name ? toKey(name) || name : null\n    }\n\n    player.buffers = mapBuffers(player.buffers, mapper)\n    var start = player.start\n    player.start = function (name, when, options) {\n      var key = mapper(name)\n      var dec = key % 1\n      if (dec) {\n        key = Math.floor(key)\n        options = Object.assign(options || {}, { cents: Math.floor(dec * 100) })\n      }\n      return start(key, when, options)\n    }\n  }\n  return player\n}\n\nfunction mapBuffers (buffers, toKey) {\n  return Object.keys(buffers).reduce(function (mapped, name) {\n    mapped[toKey(name)] = buffers[name]\n    return mapped\n  }, {})\n}\n","/* global AudioBuffer */\n'use strict'\n\nvar ADSR = require('adsr')\n\nvar EMPTY = {}\nvar DEFAULTS = {\n  gain: 1,\n  attack: 0.01,\n  decay: 0.1,\n  sustain: 0.9,\n  release: 0.3,\n  loop: false,\n  cents: 0,\n  loopStart: 0,\n  loopEnd: 0\n}\n\n/**\n * Create a sample player.\n *\n * @param {AudioContext} ac - the audio context\n * @param {ArrayBuffer|Object<String,ArrayBuffer>} source\n * @param {Onject} options - (Optional) an options object\n * @return {player} the player\n * @example\n * var SamplePlayer = require('sample-player')\n * var ac = new AudioContext()\n * var snare = SamplePlayer(ac, <AudioBuffer>)\n * snare.play()\n */\nfunction SamplePlayer (ac, source, options) {\n  var connected = false\n  var nextId = 0\n  var tracked = {}\n  var out = ac.createGain()\n  out.gain.value = 1\n\n  var opts = Object.assign({}, DEFAULTS, options)\n\n  /**\n   * @namespace\n   */\n  var player = { context: ac, out: out, opts: opts }\n  if (source instanceof AudioBuffer) player.buffer = source\n  else player.buffers = source\n\n  /**\n   * Start a sample buffer.\n   *\n   * The returned object has a function `stop(when)` to stop the sound.\n   *\n   * @param {String} name - the name of the buffer. If the source of the\n   * SamplePlayer is one sample buffer, this parameter is not required\n   * @param {Float} when - (Optional) when to start (current time if by default)\n   * @param {Object} options - additional sample playing options\n   * @return {AudioNode} an audio node with a `stop` function\n   * @example\n   * var sample = player(ac, <AudioBuffer>).connect(ac.destination)\n   * sample.start()\n   * sample.start(5, { gain: 0.7 }) // name not required since is only one AudioBuffer\n   * @example\n   * var drums = player(ac, { snare: <AudioBuffer>, kick: <AudioBuffer>, ... }).connect(ac.destination)\n   * drums.start('snare')\n   * drums.start('snare', 0, { gain: 0.3 })\n   */\n  player.start = function (name, when, options) {\n    // if only one buffer, reorder arguments\n    if (player.buffer && name !== null) return player.start(null, name, when)\n\n    var buffer = name ? player.buffers[name] : player.buffer\n    if (!buffer) {\n      console.warn('Buffer ' + name + ' not found.')\n      return\n    } else if (!connected) {\n      console.warn('SamplePlayer not connected to any node.')\n      return\n    }\n\n    var opts = options || EMPTY\n    when = Math.max(ac.currentTime, when || 0)\n    player.emit('start', when, name, opts)\n    var node = createNode(name, buffer, opts)\n    node.id = track(name, node)\n    node.env.start(when)\n    node.source.start(when)\n    player.emit('started', when, node.id, node)\n    if (opts.duration) node.stop(when + opts.duration)\n    return node\n  }\n\n  // NOTE: start will be override so we can't copy the function reference\n  // this is obviously not a good design, so this code will be gone soon.\n  /**\n   * An alias for `player.start`\n   * @see player.start\n   * @since 0.3.0\n   */\n  player.play = function (name, when, options) {\n    return player.start(name, when, options)\n  }\n\n  /**\n   * Stop some or all samples\n   *\n   * @param {Float} when - (Optional) an absolute time in seconds (or currentTime\n   * if not specified)\n   * @param {Array} nodes - (Optional) an array of nodes or nodes ids to stop\n   * @return {Array} an array of ids of the stoped samples\n   *\n   * @example\n   * var longSound = player(ac, <AudioBuffer>).connect(ac.destination)\n   * longSound.start(ac.currentTime)\n   * longSound.start(ac.currentTime + 1)\n   * longSound.start(ac.currentTime + 2)\n   * longSound.stop(ac.currentTime + 3) // stop the three sounds\n   */\n  player.stop = function (when, ids) {\n    var node\n    ids = ids || Object.keys(tracked)\n    return ids.map(function (id) {\n      node = tracked[id]\n      if (!node) return null\n      node.stop(when)\n      return node.id\n    })\n  }\n  /**\n   * Connect the player to a destination node\n   *\n   * @param {AudioNode} destination - the destination node\n   * @return {AudioPlayer} the player\n   * @chainable\n   * @example\n   * var sample = player(ac, <AudioBuffer>).connect(ac.destination)\n   */\n  player.connect = function (dest) {\n    connected = true\n    out.connect(dest)\n    return player\n  }\n\n  player.emit = function (event, when, obj, opts) {\n    if (player.onevent) player.onevent(event, when, obj, opts)\n    var fn = player['on' + event]\n    if (fn) fn(when, obj, opts)\n  }\n\n  return player\n\n  // =============== PRIVATE FUNCTIONS ============== //\n\n  function track (name, node) {\n    node.id = nextId++\n    tracked[node.id] = node\n    node.source.onended = function () {\n      var now = ac.currentTime\n      node.source.disconnect()\n      node.env.disconnect()\n      node.disconnect()\n      player.emit('ended', now, node.id, node)\n    }\n    return node.id\n  }\n\n  function createNode (name, buffer, options) {\n    var node = ac.createGain()\n    node.gain.value = 0 // the envelope will control the gain\n    node.connect(out)\n\n    node.env = envelope(ac, options, opts)\n    node.env.connect(node.gain)\n\n    node.source = ac.createBufferSource()\n    node.source.buffer = buffer\n    node.source.connect(node)\n    node.source.loop = options.loop || opts.loop\n    node.source.playbackRate.value = centsToRate(options.cents || opts.cents)\n    node.source.loopStart = options.loopStart || opts.loopStart\n    node.source.loopEnd = options.loopEnd || opts.loopEnd\n    node.stop = function (when) {\n      var time = when || ac.currentTime\n      player.emit('stop', time, name)\n      var stopAt = node.env.stop(time)\n      node.source.stop(stopAt)\n    }\n    return node\n  }\n}\n\nfunction isNum (x) { return typeof x === 'number' }\nvar PARAMS = ['attack', 'decay', 'sustain', 'release']\nfunction envelope (ac, options, opts) {\n  var env = ADSR(ac)\n  var adsr = options.adsr || opts.adsr\n  PARAMS.forEach(function (name, i) {\n    if (adsr) env[name] = adsr[i]\n    else env[name] = options[name] || opts[name]\n  })\n  env.value.value = isNum(options.gain) ? options.gain\n    : isNum(opts.gain) ? opts.gain : 1\n  return env\n}\n\n/*\n * Get playback rate for a given pitch change (in cents)\n * Basic [math](http://www.birdsoft.demon.co.uk/music/samplert.htm):\n * f2 = f1 * 2^( C / 1200 )\n */\nfunction centsToRate (cents) { return cents ? Math.pow(2, cents / 1200) : 1 }\n\nmodule.exports = SamplePlayer\n","'use strict'\n\nvar isArr = Array.isArray\nvar isObj = function (o) { return o && typeof o === 'object' }\nvar OPTS = {}\n\nmodule.exports = function (player) {\n  /**\n   * Schedule a list of events to be played at specific time.\n   *\n   * It supports three formats of events for the events list:\n   *\n   * - An array with [time, note]\n   * - An array with [time, object]\n   * - An object with { time: ?, [name|note|midi|key]: ? }\n   *\n   * @param {Float} time - an absolute time to start (or AudioContext's\n   * currentTime if provided number is 0)\n   * @param {Array} events - the events list.\n   * @return {Array} an array of ids\n   *\n   * @example\n   * // Event format: [time, note]\n   * var piano = player(ac, ...).connect(ac.destination)\n   * piano.schedule(0, [ [0, 'C2'], [0.5, 'C3'], [1, 'C4'] ])\n   *\n   * @example\n   * // Event format: an object { time: ?, name: ? }\n   * var drums = player(ac, ...).connect(ac.destination)\n   * drums.schedule(0, [\n   *   { name: 'kick', time: 0 },\n   *   { name: 'snare', time: 0.5 },\n   *   { name: 'kick', time: 1 },\n   *   { name: 'snare', time: 1.5 }\n   * ])\n   */\n  player.schedule = function (time, events) {\n    var now = player.context.currentTime\n    var when = time < now ? now : time\n    player.emit('schedule', when, events)\n    var t, o, note, opts\n    return events.map(function (event) {\n      if (!event) return null\n      else if (isArr(event)) {\n        t = event[0]; o = event[1]\n      } else {\n        t = event.time; o = event\n      }\n\n      if (isObj(o)) {\n        note = o.name || o.key || o.note || o.midi || null\n        opts = o\n      } else {\n        note = o\n        opts = OPTS\n      }\n\n      return player.start(note, when + (t || 0), opts)\n    })\n  }\n  return player\n}\n","'use strict'\n\nvar REGEX = /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)\\s*$/\n/**\n * A regex for matching note strings in scientific notation.\n *\n * @name regex\n * @function\n * @return {RegExp} the regexp used to parse the note name\n *\n * The note string should have the form `letter[accidentals][octave][element]`\n * where:\n *\n * - letter: (Required) is a letter from A to G either upper or lower case\n * - accidentals: (Optional) can be one or more `b` (flats), `#` (sharps) or `x` (double sharps).\n * They can NOT be mixed.\n * - octave: (Optional) a positive or negative integer\n * - element: (Optional) additionally anything after the duration is considered to\n * be the element name (for example: 'C2 dorian')\n *\n * The executed regex contains (by array index):\n *\n * - 0: the complete string\n * - 1: the note letter\n * - 2: the optional accidentals\n * - 3: the optional octave\n * - 4: the rest of the string (trimmed)\n *\n * @example\n * var parser = require('note-parser')\n * parser.regex.exec('c#4')\n * // => ['c#4', 'c', '#', '4', '']\n * parser.regex.exec('c#4 major')\n * // => ['c#4major', 'c', '#', '4', 'major']\n * parser.regex().exec('CMaj7')\n * // => ['CMaj7', 'C', '', '', 'Maj7']\n */\nfunction regex () { return REGEX }\n\nvar SEMITONES = [0, 2, 4, 5, 7, 9, 11]\n/**\n * Parse a note name in scientific notation an return it's components,\n * and some numeric properties including midi number and frequency.\n *\n * @name parse\n * @function\n * @param {String} note - the note string to be parsed\n * @param {Boolean} isTonic - true if the note is the tonic of something.\n * If true, en extra tonicOf property is returned. It's false by default.\n * @param {Float} tunning - The frequency of A4 note to calculate frequencies.\n * By default it 440.\n * @return {Object} the parsed note name or null if not a valid note\n *\n * The parsed note name object will ALWAYS contains:\n * - letter: the uppercase letter of the note\n * - acc: the accidentals of the note (only sharps or flats)\n * - pc: the pitch class (letter + acc)\n * - step: s a numeric representation of the letter. It's an integer from 0 to 6\n * where 0 = C, 1 = D ... 6 = B\n * - alt: a numeric representation of the accidentals. 0 means no alteration,\n * positive numbers are for sharps and negative for flats\n * - chroma: a numeric representation of the pitch class. It's like midi for\n * pitch classes. 0 = C, 1 = C#, 2 = D ... It can have negative values: -1 = Cb.\n * Can detect pitch class enhramonics.\n *\n * If the note has octave, the parser object will contain:\n * - oct: the octave number (as integer)\n * - midi: the midi number\n * - freq: the frequency (using tuning parameter as base)\n *\n * If the parameter `isTonic` is set to true, the parsed object will contain:\n * - tonicOf: the rest of the string that follows note name (left and right trimmed)\n *\n * @example\n * var parse = require('note-parser').parse\n * parse('Cb4')\n * // => { letter: 'C', acc: 'b', pc: 'Cb', step: 0, alt: -1, chroma: -1,\n *         oct: 4, midi: 59, freq: 246.94165062806206 }\n * // if no octave, no midi, no freq\n * parse('fx')\n * // => { letter: 'F', acc: '##', pc: 'F##', step: 3, alt: 2, chroma: 7 })\n */\nfunction parse (str, isTonic, tuning) {\n  if (typeof str !== 'string') return null\n  var m = REGEX.exec(str)\n  if (!m || !isTonic && m[4]) return null\n\n  var p = { letter: m[1].toUpperCase(), acc: m[2].replace(/x/g, '##') }\n  p.pc = p.letter + p.acc\n  p.step = (p.letter.charCodeAt(0) + 3) % 7\n  p.alt = p.acc[0] === 'b' ? -p.acc.length : p.acc.length\n  p.chroma = SEMITONES[p.step] + p.alt\n  if (m[3]) {\n    p.oct = +m[3]\n    p.midi = p.chroma + 12 * (p.oct + 1)\n    p.freq = midiToFreq(p.midi, tuning)\n  }\n  if (isTonic) p.tonicOf = m[4]\n  return p\n}\n\n/**\n * Given a midi number, return its frequency\n * @param {Integer} midi - midi note number\n * @param {Float} tuning - (Optional) the A4 tuning (440Hz by default)\n * @return {Float} frequency in hertzs\n */\nfunction midiToFreq (midi, tuning) {\n  return Math.pow(2, (midi - 69) / 12) * (tuning || 440)\n}\n\nvar parser = { parse: parse, regex: regex, midiToFreq: midiToFreq }\nvar FNS = ['letter', 'acc', 'pc', 'step', 'alt', 'chroma', 'oct', 'midi', 'freq']\nFNS.forEach(function (name) {\n  parser[name] = function (src) {\n    var p = parse(src)\n    return p && (typeof p[name] !== 'undefined') ? p[name] : null\n  }\n})\n\nmodule.exports = parser\n\n// extra API docs\n/**\n * Get midi of a note\n *\n * @name midi\n * @function\n * @param {String} note - the note name\n * @return {Integer} the midi number of the note or null if not a valid note\n * or the note does NOT contains octave\n * @example\n * var parser = require('note-parser')\n * parser.midi('A4') // => 69\n * parser.midi('A') // => null\n */\n/**\n * Get freq of a note in hertzs (in a well tempered 440Hz A4)\n *\n * @name freq\n * @function\n * @param {String} note - the note name\n * @return {Float} the freq of the number if hertzs or null if not valid note\n * or the note does NOT contains octave\n * @example\n * var parser = require('note-parser')\n * parser.freq('A4') // => 440\n * parser.freq('A') // => null\n */\n","'use strict'\n\nvar load = require('audio-loader')\nvar player = require('sample-player')\n\n/**\n * Load a soundfont instrument. It returns a promise that resolves to a\n * instrument object.\n *\n * The instrument object returned by the promise has the following properties:\n *\n * - name: the instrument name\n * - play: A function to play notes from the buffer with the signature\n * `play(note, time, duration, options)`\n *\n *\n * The valid options are:\n *\n * - `format`: the soundfont format. 'mp3' by default. Can be 'ogg'\n * - `soundfont`: the soundfont name. 'MusyngKite' by default. Can be 'FluidR3_GM'\n * - `nameToUrl` <Function>: a function to convert from instrument names to URL\n * - `destination`: by default Soundfont uses the `audioContext.destination` but you can override it.\n * - `gain`: the gain of the player (1 by default)\n * - `notes`: an array of the notes to decode. It can be an array of strings\n * with note names or an array of numbers with midi note numbers. This is a\n * performance option: since decoding mp3 is a cpu intensive process, you can limit\n * limit the number of notes you want and reduce the time to load the instrument.\n *\n * @param {AudioContext} ac - the audio context\n * @param {String} name - the instrument name. For example: 'acoustic_grand_piano'\n * @param {Object} options - (Optional) the same options as Soundfont.loadBuffers\n * @return {Promise}\n *\n * @example\n * var Soundfont = require('sounfont-player')\n * Soundfont.instrument('marimba').then(function (marimba) {\n *   marimba.play('C4')\n * })\n */\nfunction instrument (ac, name, options) {\n  if (arguments.length === 1) return function (n, o) { return instrument(ac, n, o) }\n  var opts = options || {}\n  var isUrl = opts.isSoundfontURL || isSoundfontURL\n  var toUrl = opts.nameToUrl || nameToUrl\n  var url = isUrl(name) ? name : toUrl(name, opts.soundfont, opts.format)\n\n  return load(ac, url, { only: opts.only || opts.notes }).then(function (buffers) {\n    var p = player(ac, buffers, opts).connect(opts.destination ? opts.destination : ac.destination)\n    p.url = url\n    p.name = name\n    return p\n  })\n}\n\nfunction isSoundfontURL (name) {\n  return /\\.js(\\?.*)?$/i.test(name)\n}\n\n/**\n * Given an instrument name returns a URL to to the Benjamin Gleitzman's\n * package of [pre-rendered sound fonts](https://github.com/gleitz/midi-js-soundfonts)\n *\n * @param {String} name - instrument name\n * @param {String} soundfont - (Optional) the soundfont name. One of 'FluidR3_GM'\n * or 'MusyngKite' ('MusyngKite' by default)\n * @param {String} format - (Optional) Can be 'mp3' or 'ogg' (mp3 by default)\n * @returns {String} the Soundfont file url\n * @example\n * var Soundfont = require('soundfont-player')\n * Soundfont.nameToUrl('marimba', 'mp3')\n */\nfunction nameToUrl (name, sf, format) {\n  format = format === 'ogg' ? format : 'mp3'\n  sf = sf === 'FluidR3_GM' ? sf : 'MusyngKite'\n  return 'https://gleitz.github.io/midi-js-soundfonts/' + sf + '/' + name + '-' + format + '.js'\n}\n\n// In the 1.0.0 release it will be:\n// var Soundfont = {}\nvar Soundfont = require('./legacy')\nSoundfont.instrument = instrument\nSoundfont.nameToUrl = nameToUrl\n\nif (typeof module === 'object' && module.exports) module.exports = Soundfont\nif (typeof window !== 'undefined') window.Soundfont = Soundfont\n","'use strict'\n\nvar parser = require('note-parser')\n\n/**\n * Create a Soundfont object\n *\n * @param {AudioContext} context - the [audio context](https://developer.mozilla.org/en/docs/Web/API/AudioContext)\n * @param {Function} nameToUrl - (Optional) a function that maps the sound font name to the url\n * @return {Soundfont} a soundfont object\n */\nfunction Soundfont (ctx, nameToUrl) {\n  console.warn('new Soundfont() is deprected')\n  console.log('Please use Soundfont.instrument() instead of new Soundfont().instrument()')\n  if (!(this instanceof Soundfont)) return new Soundfont(ctx)\n\n  this.nameToUrl = nameToUrl || Soundfont.nameToUrl\n  this.ctx = ctx\n  this.instruments = {}\n  this.promises = []\n}\n\nSoundfont.prototype.onready = function (callback) {\n  console.warn('deprecated API')\n  console.log('Please use Promise.all(Soundfont.instrument(), Soundfont.instrument()).then() instead of new Soundfont().onready()')\n  Promise.all(this.promises).then(callback)\n}\n\nSoundfont.prototype.instrument = function (name, options) {\n  console.warn('new Soundfont().instrument() is deprecated.')\n  console.log('Please use Soundfont.instrument() instead.')\n  var ctx = this.ctx\n  name = name || 'default'\n  if (name in this.instruments) return this.instruments[name]\n  var inst = {name: name, play: oscillatorPlayer(ctx, options)}\n  this.instruments[name] = inst\n  if (name !== 'default') {\n    var promise = Soundfont.instrument(ctx, name, options).then(function (instrument) {\n      inst.play = instrument.play\n      return inst\n    })\n    this.promises.push(promise)\n    inst.onready = function (cb) {\n      console.warn('onready is deprecated. Use Soundfont.instrument().then()')\n      promise.then(cb)\n    }\n  } else {\n    inst.onready = function (cb) {\n      console.warn('onready is deprecated. Use Soundfont.instrument().then()')\n      cb()\n    }\n  }\n  return inst\n}\n\n/*\n * Load the buffers of a given instrument name. It returns a promise that resolves\n * to a hash with midi note numbers as keys, and audio buffers as values.\n *\n * @param {AudioContext} ac - the audio context\n * @param {String} name - the instrument name (it accepts an url if starts with \"http\")\n * @param {Object} options - (Optional) options object\n * @return {Promise} a promise that resolves to a Hash of { midiNoteNum: <AudioBuffer> }\n *\n * The options object accepts the following keys:\n *\n * - nameToUrl {Function}: a function to convert from instrument names to urls.\n * By default it uses Benjamin Gleitzman's package of\n * [pre-rendered sound fonts](https://github.com/gleitz/midi-js-soundfonts)\n * - notes {Array}: the list of note names to be decoded (all by default)\n *\n * @example\n * var Soundfont = require('soundfont-player')\n * Soundfont.loadBuffers(ctx, 'acoustic_grand_piano').then(function(buffers) {\n *  buffers[60] // => An <AudioBuffer> corresponding to note C4\n * })\n */\nfunction loadBuffers (ac, name, options) {\n  console.warn('Soundfont.loadBuffers is deprecate.')\n  console.log('Use Soundfont.instrument(..) and get buffers properties from the result.')\n  return Soundfont.instrument(ac, name, options).then(function (inst) {\n    return inst.buffers\n  })\n}\nSoundfont.loadBuffers = loadBuffers\n\n/**\n * Returns a function that plays an oscillator\n *\n * @param {AudioContext} ac - the audio context\n * @param {Hash} defaultOptions - (Optional) a hash of options:\n * - vcoType: the oscillator type (default: 'sine')\n * - gain: the output gain value (default: 0.4)\n  * - destination: the player destination (default: ac.destination)\n */\nfunction oscillatorPlayer (ctx, defaultOptions) {\n  defaultOptions = defaultOptions || {}\n  return function (note, time, duration, options) {\n    console.warn('The oscillator player is deprecated.')\n    console.log('Starting with version 0.9.0 you will have to wait until the soundfont is loaded to play sounds.')\n    var midi = note > 0 && note < 129 ? +note : parser.midi(note)\n    var freq = midi ? parser.midiToFreq(midi, 440) : null\n    if (!freq) return\n\n    duration = duration || 0.2\n\n    options = options || {}\n    var destination = options.destination || defaultOptions.destination || ctx.destination\n    var vcoType = options.vcoType || defaultOptions.vcoType || 'sine'\n    var gain = options.gain || defaultOptions.gain || 0.4\n\n    var vco = ctx.createOscillator()\n    vco.type = vcoType\n    vco.frequency.value = freq\n\n    /* VCA */\n    var vca = ctx.createGain()\n    vca.gain.value = gain\n\n    /* Connections */\n    vco.connect(vca)\n    vca.connect(destination)\n\n    vco.start(time)\n    if (duration > 0) vco.stop(time + duration)\n    return vco\n  }\n}\n\n/**\n * Given a note name, return the note midi number\n *\n * @name noteToMidi\n * @function\n * @param {String} noteName\n * @return {Integer} the note midi number or null if not a valid note name\n */\nSoundfont.noteToMidi = parser.midi\n\nmodule.exports = Soundfont\n"],"names":["module","exports","audioContext","node","createGain","voltage","_voltage","context","createBufferSource","buffer","createBuffer","sampleRate","getChannelData","set","flat","loop","getVoltage","value","scale","startValue","endValue","_startAmount","_endAmount","_multiplier","connect","gain","Object","defineProperties","props","attack","writable","decay","sustain","release","getReleaseDuration","this","start","at","target","startAmount","endAmount","_decayFrom","_startedAt","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","setTargetAtTime","getTimeConstant","stop","isTarget","endTime","expFalloff","valueAtTime","end","fromTime","toTime","truncateTime","getValue","onended","get","Float32Array","time","Math","log","decode","sBase64","nBlocksSize","nMod3","nMod4","nChr","sB64Enc","replace","nInLen","length","nOutLen","ceil","taBytes","Uint8Array","nUint24","nOutIdx","nInIdx","charCodeAt","url","type","Promise","done","reject","req","XMLHttpRequest","responseType","open","onload","status","response","Error","statusText","onerror","send","base64","require","fetch","fromRegex","r","o","test","prefix","pre","name","load","ac","source","options","defVal","loader","ArrayBuffer","loadArrayBuffer","isAudioFileName","loadAudioFile","then","isPromise","loadPromise","isArray","loadArrayData","isObject","loadObjectData","isJsonFileName","loadJsonFile","isBase64Audio","loadBase64Audio","isJsFileName","loadMidiJSFile","resolve","array","decodeAudioData","slice","from","promise","Array","all","map","data","obj","dest","promises","keys","key","only","indexOf","audio","JSON","parse","i","midiJsToJson","begin","lastIndexOf","window","loadAudio","e","t","s","a","n","h","code","c","call","defineProperty","_event","_data","receivedTime","console","warn","_messageCode","channel","messageType","velocity","pressure","controllerNumber","controllerValue","channelModeMessage","program","pitchBend","fillStr","num","join","isNum","x","midiToFreq","midi","tuning","pow","REGEX","regex","SEMITONES","str","isTonic","m","exec","p","letter","toUpperCase","acc","pc","step","alt","pos","chroma","oct","freq","tonicOf","LETTERS","build","charAt","octStr","note","isDef","src","player","on","event","cb","arguments","fn1","fn2","prop","old","b","d","events","notes","scheduler","SamplePlayer","midimessage","listenToMidi","input","started","opts","vel","onmidimessage","msg","mm","play","toMidi","isMidi","buffers","toKey","mapper","reduce","mapped","mapBuffers","when","dec","floor","assign","cents","ADSR","EMPTY","DEFAULTS","loopStart","loopEnd","PARAMS","connected","nextId","tracked","out","AudioBuffer","max","currentTime","emit","createNode","id","now","disconnect","env","track","duration","ids","onevent","fn","adsr","forEach","envelope","playbackRate","stopAt","isArr","OPTS","schedule","isObj","parser","isSoundfontURL","nameToUrl","sf","format","Soundfont","instrument","isUrl","toUrl","soundfont","destination","ctx","instruments","oscillatorPlayer","defaultOptions","vcoType","vco","createOscillator","frequency","vca","prototype","onready","callback","inst","push","loadBuffers","noteToMidi"],"sourceRoot":""}